import { locales } from "@/i18n.config";
import fs from "fs";
import path from "path";
import { DatedNewsMetadata } from "@/types/news.types";
import {
  getMetadataFromFile,
  getContentSubdirectories,
} from "../utils/index.utils";

// News index does not use previousIndex for last_updated, but could be extended if needed
function generateNewsIndex(locale: string): DatedNewsMetadata[] {
  const newsDir = path.join(process.cwd(), `content/${locale}/news`);
  if (!fs.existsSync(newsDir)) {
    console.error(`Directory not found: ${newsDir}`);
    return [];
  }

  const subdirectories = getContentSubdirectories(newsDir);
  return subdirectories
    .map((subdir) => {
      const pagePath = path.join(newsDir, subdir, "page.mdx");
      console.log(`Processing news page: ${pagePath}`);
      if (fs.existsSync(pagePath)) {
        const metadata = getMetadataFromFile(pagePath);
        if (metadata) {
          // DatedNewsMetadata expects date as Date, but we store as string (ISO) in JSON
          return {
            id: metadata.id,
            title: metadata.title,
            date: metadata.date,
            image: metadata.image,
            summary: metadata.summary,
            author: metadata.author,
            source: metadata.source,
          };
        }
      }
      return null;
    })
    .filter((news): news is NonNullable<typeof news> => news !== null && news.id !== undefined);
}

console.log("Starting news index generation...");

locales.forEach((locale) => {
  console.log(`Processing locale: ${locale}...`);
  const newsIndex = generateNewsIndex(locale);
  // Write to content/${locale}/news/index.ts
  const outputFilePath = path.join(
    process.cwd(),
    `content/${locale}/news/index.ts`
  );
  const fileContent = `// This file is generated by news-index.script.ts. Do not edit manually.\nimport { DatedNewsMetadata } from \"@/types/news.types\";\n\nconst data: DatedNewsMetadata[] = ${JSON.stringify(
    newsIndex,
    null,
    2
  )};\n\nexport default data;\n`;
  console.log(`Writing output file to: ${outputFilePath}`);
  fs.writeFileSync(outputFilePath, fileContent);
});

console.log("News index generation completed.");
